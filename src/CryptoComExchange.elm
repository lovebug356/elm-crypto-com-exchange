module CryptoComExchange exposing (OrderReference, LimitOrderRequest, OrderSide(..), OrderType(..), OrderId(..), Interval(..), InstrumentName(..), Account, Trade, Candle, Candlestick, Ticker, Instrument)

{-| This module exposes the types used in the API.

@docs OrderReference, LimitOrderRequest, OrderSide, OrderType, OrderId, Interval, InstrumentName, Account, Trade, Candle, Candlestick, Ticker, Instrument

-}

import Time


{-| Information of an instrument.
-}
type alias Instrument =
    { instrumentName : InstrumentName
    , baseCurrency : String
    , quoteCurrency : String
    , priceDecimals : Int
    , quantityDecimals : Int
    , marginTradingEnabled : Bool
    }


{-| Information of a ticker
-}
type alias Ticker =
    { instrumentName : InstrumentName
    , currentBidPrice : Float
    , currentAskPrice : Float
    , priceOfLatestTrade : Float
    , timestamp : Int
    , total24hTradedVolume : Float
    , priceOf24hHighestTrade : Float
    , priceOf24hLowestTrade : Float
    , priceChange24h : Float
    }


{-| All data of a candlestick diagram.
-}
type alias Candlestick =
    { instrumentName : String
    , interval : String
    , data : List Candle
    }


{-| Single candle information.
-}
type alias Candle =
    { timestamp : Int
    , open : Float
    , high : Float
    , low : Float
    , close : Float
    , volume : Float
    }


{-| Information from a trade.
-}
type alias Trade =
    { instrumentName : String
    , price : Float
    , quantity : Float
    , side : String
    , id : Int
    , timestamp : Time.Posix
    }


{-| Summary of an account.
-}
type alias Account =
    { balance : Float
    , available : Float
    , order : Float
    , stake : Float
    , currency : String
    }


{-| Name of the instrument as defined by the exchange.
-}
type InstrumentName
    = InstrumentName String


{-| Interval of the candlesticks.
-}
type Interval
    = Interval String


{-| Id of an order generated by the exchange.
-}
type OrderId
    = OrderId String


{-| Type information for an order.
-}
type OrderType
    = Limit


{-| Side information for an order.
-}
type OrderSide
    = Buy
    | Sell


{-| Information needed to create a limit order.
-}
type alias LimitOrderRequest =
    { instrumentName : InstrumentName
    , side : OrderSide
    , price : String
    , quantity : String
    }


{-| Combination of order id and client order id.
-}
type alias OrderReference =
    { id : OrderId
    , clientId : String
    }
